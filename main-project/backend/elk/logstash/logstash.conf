# Logstash 활용해서 mysql 접속 후 데이터 elasticsearch로 가져오기
input{
    jdbc {
        ###### 1단계 방식, 매번 똑같은 데이터를 계속 가져오는 문제 ######
        # jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar" #자바로 만들어진 드라이버 파일경로
        # jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        # jdbc_connection_string => "jdbc:mysql://my-database:3306/mydocker03"
        # jdbc_user => "root"
        # jdbc_password => "root"
        # schedule => "* * * * *" # 분, 시간, 일, 월, 요일 순서 # 매분 실행하라는 의미
        # statement => "select * from product"

        ##### 2단계 방식, 시간의 소수점이 짤리기때문에 비교할때 문제발생 #####
        # jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar" #자바로 만들어진 드라이버 파일경로
        # jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        # jdbc_connection_string => "jdbc:mysql://my-database:3306/mydocker03"
        # jdbc_user => "root"
        # jdbc_password => "root"
        # schedule => "* * * * *" # 분, 시간, 일, 월, 요일 순서 # 매분 실행하라는 의미
        # use_column_value => true
        # tracking_column => "updatedat"
        # tracking_column_type => "timestamp"
        # last_run_metadata_path => "./aaa.txt"
        # statement => "select id, name, price, updatedat from product where updatedat > :sql_last_value order by updatedat asc"
        # # 가장마지막 데이터 보다 클 경우 가져옴
        # # 가장 최근에 만든 데이터가 마지막에 오도록 asc 정렬을 해줘야한다.

        ##### 3단계 방식 #####
        jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar" #자바로 만들어진 드라이버 파일경로
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://my-database:3306/mydocker04"
        jdbc_user => "root"
        jdbc_password => "root"
        schedule => "* * * * *" # 분, 시간, 일, 월, 요일 순서 # 매분 실행하라는 의미
        use_column_value => true
        tracking_column => "updatedat"
        tracking_column_type => "numeric"
        last_run_metadata_path => "./aaa.txt"
        statement => "select id, name, unix_timestamp(updatedat) as updatedat from product where unix_timestamp(updatedat) > :sql_last_value order by updatedat asc"
    }
}
output{
    elasticsearch {
        hosts => "elasticsearch:9200"
        index => "myproduct04"
    }
}